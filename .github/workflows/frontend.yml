name: Frontend CI/CD

on:
  push:
    branches: [ feature/properly-setup-cd ]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build


  build-and-push:
      name: Build and Push Docker Image
      runs-on: ubuntu-latest
      needs: build-and-test
      permissions:
        contents: read
        packages: write
      defaults:
        run:
          working-directory: ./frontend

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '23'
            cache: 'npm'
            cache-dependency-path: './frontend/package-lock.json'

        - name: Install dependencies
          run: npm ci

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        # Login to GitHub Container Registry using the built-in GITHUB_TOKEN
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            push: true
            context: ./frontend
            file: ./frontend/Dockerfile
            tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max