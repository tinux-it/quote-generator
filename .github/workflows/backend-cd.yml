name: Backend CD - Build and Push Image

# Trigger workflow on main/master pushes, feature/setup-ci-backend, or manually
on:
  push:
    branches:
      - main
      - master
      - feature/setup-ci-backend

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to GitHub Container Registry using the built-in GITHUB_TOKEN
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract branch name for tagging
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        id: extract_branch

      # Sanitize branch name for Docker tag (replace / with -)
      - name: Sanitize branch name for Docker tag
        run: echo "DOCKER_SAFE_BRANCH=$(echo ${{ env.BRANCH_NAME }} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          # Replace with your actual image name
          images: your-dockerhub-username/your-backend-image
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
            type=raw,value=${{ env.DOCKER_SAFE_BRANCH }}
            type=sha,format=short
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Output the image details for all branches
      - name: Output push details
        run: |
          echo "âœ… Docker image built and pushed successfully!"
          echo "Image pushed with tags: ${{ steps.meta.outputs.tags }}"
          echo ""
          echo "To pull this image, run:"
          
          # Extract the first tag for demo purposes
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          echo "docker pull ${FIRST_TAG}"
          
          if [[ "${{ github.ref }}" == "refs/heads/feature/setup-ci-backend" ]]; then
            echo ""
            echo "Feature branch tag: your-dockerhub-username/your-backend-image:feature-setup-ci-backend"
            echo "You can pull this specific tag with:"
            echo "docker pull your-dockerhub-username/your-backend-image:feature-setup-ci-backend"
          fi