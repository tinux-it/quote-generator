name: Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  setup:
    name: Setup components
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: none
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/backend/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Upload vendor directory
        uses: actions/upload-artifact@v4
        with:
          name: vendor
          path: backend/vendor/

  php-cs-fixer:
    needs: setup
    name: PHP Coding Standards
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download vendor directory
        uses: actions/download-artifact@v4
        with:
          name: vendor
          path: backend/vendor/

      - name: Ensure vendor/bin scripts are executable
        run: chmod +x vendor/bin/*

      - name: Check coding standards
        run: vendor/bin/ecs check src --no-progress-bar  --config=ecs.php

  phpstan:
    needs: setup
    name: PHPStan Static Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download vendor directory
        uses: actions/download-artifact@v4
        with:
          name: vendor
          path: backend/vendor/

      - name: Ensure vendor/bin scripts are executable
        run: chmod +x vendor/bin/*

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src --no-progress --configuration=phpstan.neon

  build-and-push:
    runs-on: ubuntu-latest
    needs: [php-cs-fixer, phpstan]
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download vendor directory
        uses: actions/download-artifact@v4
        with:
          name: vendor
          path: backend/vendor/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build prod image
        run: |
          docker build \
            --target prod \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            .

      - name: Push prod image to GitHub Container Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest